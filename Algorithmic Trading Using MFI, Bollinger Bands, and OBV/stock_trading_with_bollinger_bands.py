# -*- coding: utf-8 -*-
"""Stock Trading with Bollinger Bands.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fJIuSX_AvpRNfk_XwMat6Ui7g2UV5slm
"""

#Description: This program uses the Bollinger Band strategy to determine when to buy and sell stocks.

#Import libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
plt.style.use('fivethirtyeight')

#Get the data
df = pd.read_csv('TSLA.csv')
#Set the index to be the date
df = df.set_index(pd.DatetimeIndex(df['Date'].values))
#Show the data
df

#Calculate the simple moving average, standard deviation, and the lower and upper band.
#Get the time period (20 day)
period = 20
#Calculate the Simple Moving Average (SMA)
df['SMA'] = df['Close'].rolling(window=period).mean()
#Get the standard deviation
df['STD'] = df['Close'].rolling(window=period).std()
#Calculate the upper bollinger band
df['Upper'] = df['SMA'] + (df['STD'] * 2) 
#Calculate the lower bollinger band
df['Lower'] = df['SMA'] - (df['STD'] * 2) 
#Create a list of columns to keep
column_list = ['Close', 'SMA', 'Upper', 'Lower']
#Plot the data
df[column_list].plot(figsize=(12.2, 6.4))
plt.title('Bollinger Band for TSLA')
plt.ylabel('USD Price')
plt.show()

#Plot and shade the area between the two Bollinger bands
#Get the figure and the figure size
fig = plt.figure(figsize=(12.2, 6.4))
#Add the subplot
ax = fig.add_subplot(1, 1, 1)
#Get the index values of the data frame
x_axis = df.index
#Plot and shade the area between the Upper and Lower bands gray
ax.fill_between(x_axis, df['Upper'], df['Lower'], color= 'grey')
#Plot the closing price and the moving average
ax.plot(x_axis, df['Close'], color= 'gold', lw = 3, label='Close Price')
ax.plot(x_axis, df['SMA'], color= 'blue', lw = 3, label='Simple Moving Average')
#Set the title and show the image
ax.set_title('Bollinger Band for TSLA')
ax.set_xlabel('Date')
ax.set_ylabel('USD Price')
plt.xticks(rotation=45)
ax.legend()
plt.show()

#Create a new data frame
new_df = df[period-1:]
#Show the new data
new_df

#Create a function to get the buy and sell signals
def get_signal(data):

  buy_signal = []
  sell_signal = []

  for i in range(len(data['Close'])):
    if data['Close'][i] > data['Upper'][i]: #then you should sell
      buy_signal.append(np.nan)
      sell_signal.append(data['Close'][i])
    elif data['Close'][i] < data['Lower'][i]: #then you should buy
      buy_signal.append(data['Close'][i])
      sell_signal.append(np.nan)
    else:
      buy_signal.append(np.nan)
      sell_signal.append(np.nan)

  return (buy_signal, sell_signal)

#Create two new columns
new_df['Buy'] = get_signal(new_df)[0]
new_df['Sell'] = get_signal(new_df)[1]

#Plot all of the data
#Get the figure and the figure size
fig = plt.figure(figsize=(12.2, 6.4))
#Add the subplot
ax = fig.add_subplot(1, 1, 1)
#Get the index values of the data frame
x_axis = new_df.index
#Plot and shade the area between the Upper and Lower bands gray
ax.fill_between(x_axis, new_df['Upper'], new_df['Lower'], color= 'grey')
#Plot the closing price and the moving average
ax.plot(x_axis, new_df['Close'], color= 'gold', lw = 3, label='Close Price', alpha = 0.5)
ax.plot(x_axis, new_df['SMA'], color= 'blue', lw = 3, label='Simple Moving Average', alpha = 0.5)
ax.scatter(x_axis, new_df['Buy'], color='green', lw = 3, label='Buy', marker='^', alpha = 1)
ax.scatter(x_axis, new_df['Sell'], color='red', lw = 3, label='Sell', marker='v', alpha = 1)
#Set the title and show the image
ax.set_title('Bollinger Band for TSLA')
ax.set_xlabel('Date')
ax.set_ylabel('USD Price')
plt.xticks(rotation=45)
ax.legend()
plt.show()